---
name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: {}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: write
      statuses: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Super-Linter
        uses: super-linter/super-linter@v7.3.0 # x-release-please-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENABLE_COMMITLINT_STRICT_MODE: true
          ENFORCE_COMMITLINT_CONFIGURATION_CHECK: true
          VALIDATE_JSCPD: false
          VALIDATE_TYPESCRIPT_STANDARD: false

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: ./.github/workflows/push.yml

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - lint
      - build
    permissions:
      contents: read
    outputs:
      new_release_published: ${{ steps.semrel.outputs.new_release_published == 'true' }}
      new_release_version: ${{ steps.semrel.outputs.new_release_version }}
      last_release_version: ${{ steps.semrel.outputs.last_release_version }}
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/create-github-app-token@v2
        id: token
        with:
          app-id: ${{ vars.APP_ID_SEMREL }}
          private-key: ${{ secrets.APP_KEY_SEMREL }}
      - name: Semantic release
        id: semrel
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/changelog
            @semantic-release/npm
            @semantic-release/git
            @semantic-release/github
          dry_run: ${{ github.event_name != 'push' }}
          ci: true
        env:
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
